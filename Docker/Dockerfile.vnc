ARG BASE_IMAGE=ubuntu:20.04
FROM $BASE_IMAGE

LABEL maintainer "Lukas Rustler <lukas.rustler@fel.cvut.cz>"

# Non-interactive installation mode
ENV DEBIAN_FRONTEND=noninteractive
ARG TARGETPLATFORM
#Change for other python; 3.11 may be too much right now
ARG PYTHON_VER=3.11

#Install all neccesary thingies
RUN apt update -y && apt install software-properties-common -y && add-apt-repository ppa:deadsnakes/ppa -y  \
    && apt update && apt install python$PYTHON_VER wget sudo gedit unzip apt-utils curl \
    python$PYTHON_VER-venv nano mesa-utils curl htop net-tools sshfs python$PYTHON_VER-distutils  \
    screen git python$PYTHON_VER-dev libpng-dev libqhull-dev libfreetype6-dev libfreetype6  \
    pkg-config python3.8-venv python3.8-dev apt-transport-https psmisc tmux gdb gitk autoconf locales gdebi  \
    terminator meld dos2unix -y

# Set the locale
RUN locale-gen en_US.UTF-8

#Install pips
# 3.8 is default at Ubuntu 20.04 and is fine for thing that do not work on newer versions
RUN curl -sS https://bootstrap.pypa.io/get-pip.py | python$PYTHON_VER &&  \
    curl -sS https://bootstrap.pypa.io/get-pip.py | python3.8

# VSCode
RUN if [ "$TARGETPLATFORM" = "linux/arm64" ] ; then \
       wget -O code.deb "https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-arm64"; \
    else \
       wget -O code.deb https://go.microsoft.com/fwlink/?LinkID=760868; \
    fi

RUN gdebi -n code.deb && rm code.deb

# PyCharm
ARG PYCHARM_VER=2024.3.4
RUN cd /opt && wget https://download.jetbrains.com/python/pycharm-community-$PYCHARM_VER.tar.gz &&  \
    tar -xvf pycharm-community-$PYCHARM_VER.tar.gz && rm pycharm-community-$PYCHARM_VER.tar.gz &&  \
    mv pycharm-community-$PYCHARM_VER pycharm && ln -s /opt/pycharm/bin/pycharm.sh /usr/bin/pycharm && chmod +x /usr/bin/pycharm

RUN apt remove python3-psutil -y
RUN python$PYTHON_VER -m pip install --upgrade pip && python$PYTHON_VER -m pip install "numpy<2" cython "open3d>0.16.0" scipy opencv-python transforms3d pybullet roboticstoolbox-python psutil --ignore-installed --no-cache-dir


# Install graphics
RUN apt install -y xfce4 xfce4-goodies xserver-xorg-video-dummy xserver-xorg-legacy x11vnc firefox && \
    apt remove -y xfce4-power-manager light-locker && \
    sed -i 's/allowed_users=console/allowed_users=anybody/' /etc/X11/Xwrapper.config

COPY additional_files/xorg.conf /etc/X11/xorg.conf
RUN dos2unix /etc/X11/xorg.conf

# Install Octave
RUN apt install -y octave epstool transfig

# Install python
RUN apt install -y python3 python3-dev python3-pip python3-setuptools && \
    if [ ! -f "/usr/bin/python" ]; then ln -s /usr/bin/python3 /usr/bin/python; fi

# Install magic-wormwhole to get things from one computer to another safely
RUN apt install -y magic-wormhole

# Install noVNC
RUN git clone https://github.com/novnc/noVNC.git /opt/novnc && \
    git clone https://github.com/novnc/websockify /opt/novnc/utils/websockify && \
    echo "<html><head><meta http-equiv=\"Refresh\" content=\"0; url=vnc.html?autoconnect=true&reconnect=true&reconnect_delay=1000&resize=scale&quality=9\"></head></html>" > /opt/novnc/index.html

# Set up script to launch graphics and vnc
COPY additional_files/start-vnc-session.sh /usr/bin/start-vnc-session.sh
RUN chmod +x /usr/bin/start-vnc-session.sh && \
    dos2unix /usr/bin/start-vnc-session.sh

# Manage ports
EXPOSE 5901 6080 8888 10000/tcp 10000/udp

#Add docker user with correct UID and GID; and add him to sudoers
RUN useradd -l -u 33333 -G sudo -md /home/docker -s /bin/bash docker && \
    echo 'docker:docker' | chpasswd && usermod -aG sudo docker && \
    sed -i.bkp -e 's/%sudo\s\+ALL=(ALL\(:ALL\)\?)\s\+ALL/%sudo ALL=NOPASSWD:ALL/g' /etc/sudoers && \
    echo "docker  ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Install informative git for bash
RUN git clone https://github.com/magicmonty/bash-git-prompt.git /home/docker/.bash-git-prompt --depth=1

RUN echo "alias vnc='export DISPLAY=:99'" >> /home/docker/.bashrc
RUN echo "export PORT=5999" >> /home/docker/.bashrc
USER docker
# Set up VSCode launcher
COPY ["additional_files/Visual Studio Code.desktop", "/home/docker/Desktop/Visual Studio Code.desktop"]
RUN sudo chown docker:docker "/home/docker/Desktop/Visual Studio Code.desktop" && chmod +x "/home/docker/Desktop/Visual Studio Code.desktop"

COPY ["additional_files/PyCharm.desktop", "/home/docker/Desktop/PyCharm.desktop"]
RUN sudo chown docker:docker "/home/docker/Desktop/PyCharm.desktop" && chmod +x "/home/docker/Desktop/PyCharm.desktop"

RUN cd /home/docker && git clone https://github.com/rustlluk/pyCub.git && cd pyCub && python$PYTHON_VER -m pip install . && \
    cd /home/docker && rm -Rf pyCub

RUN sudo ln -sf /usr/bin/python$PYTHON_VER /usr/local/bin/python && sudo ln -sf /usr/bin/python$PYTHON_VER /usr/local/bin/python3
RUN echo "export PATH=/usr/local/bin:$PATH" >> /home/docker/.bashrc
RUN echo "export BROWSER=/usr/bin/firefox" >> /home/docker/.bashrc
# Set environmental variables
RUN echo "export DISPLAY=:99" >> /home/docker/.bashrc

# Clean up unnecessary installation products
RUN sudo rm -Rf /var/lib/apt/lists/*

WORKDIR /home/docker